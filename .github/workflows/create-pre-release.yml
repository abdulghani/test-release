name: Create a pre-release
on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: "Version tag"
        type: string
        required: true
  push:
    branches:
      - main

# ADD COMMENTS HERE
jobs:
  create-pre-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: "Setup jq"
        uses: dcarbone/install-jq-action@v2
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Extract branch ticket name
        id: ticket_name
        run: |
          RESULT=$(echo "${{ github.event.head_commit.message }}" | grep -i -o 'BC-[0-9]\+')
          if [ -n "$RESULT" ]; then
              echo "Branch name: $RESULT"
              echo "Ticket name: $(echo "${{ github.event.head_commit.message }}" | grep -i -o 'BC-[0-9]\+' | head -n 1 | tr '[:lower:]' '[:upper:]')"
              echo "TICKET_NAME=$(echo "${{ github.event.head_commit.message }}" | grep -i -o 'BC-[0-9]\+' | head -n 1 | tr '[:lower:]' '[:upper:]')" >> $GITHUB_OUTPUT
          else
              echo "Invalid commit message, not containing a ticket name (BC-XXXX)"
              echo "${{ github.event.head_commit.message }}"
          fi
      - name: Automated Version Bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.TEST_TOKEN }}
        with:
          tag-prefix: "v"
          commit-message: "release {{version}} [skip ci]"
          default: minor
          target-branch: main
          bump-policy: "last-commit"
      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1.3.0
        with:
          token: ${{ secrets.TEST_TOKEN }}
          exclude_types: other,chore
      - name: Extract version
        id: extract_version
        run: |
          echo "Current version $(jq -r '.version' package.json)"
          echo "version=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT
      - name: Echo extracted version
        run: |
          echo "${{ steps.extract_version.outputs.version }}"
          echo "${{ github.event.head_commit.message }}"
          echo "CHANGELOG"
          echo "${{ steps.bump_version.outputs.clean_changelog }}"
      - name: Get current year
        id: current_year
        uses: Kaven-Universe/github-action-current-date-time@v1.4.0
        with:
          format: "YYYY"
      - name: Download iteration artifact
        run: |
          aws s3 cp s3://pre-release-number/pre-release-number.json ./pre-release-number.json
          cat ./pre-release-number.json
      - name: Determine iteration number
        id: iteration_number
        env:
          YEAR: ${{ steps.current_year.outputs.year }}
          MONTH: ${{ steps.current_year.outputs.month }}
        run: |
          if [ "$TICKET_NAME" == "" ]; then
            echo "No ticket name found, skipping iteration number"
            echo "ITERATION=0" >> $GITHUB_OUTPUT
            exit 0
          fi        
          if [ "$YEAR" == "$(jq -r '.year' pre-release-number.json)" ] && [ "$MONTH" == "$(jq -r '.month' pre-release-number.json)" ]; then
            echo "Incrementing iteration number"
            jq '.iteration += 1' pre-release-number.json > pre-release-number.json.tmp
            mv pre-release-number.json.tmp pre-release-number.json
          else
            echo "Resetting iteration number"
            jq --arg YEAR ${YEAR} --arg MONTH ${MONTH} '.year = $YEAR | .month = $MONTH | .iteration = 1' pre-release-number.json > pre-release-number.json.tmp
            mv pre-release-number.json.tmp pre-release-number.json
          fi
          cat pre-release-number.json
          echo "ITERATION=$(jq ".iteration" pre-release-number.json)" >> $GITHUB_OUTPUT
      - name: Upload iteration artifact
        run: |
          aws s3 cp ./pre-release-number.json s3://pre-release-number/pre-release-number.json
      - name: Create a pre-release
        uses: actions/create-release@v1
        if: steps.ticket_name.outputs.TICKET_NAME != ''
        env:
          GITHUB_TOKEN: ${{ secrets.TEST_TOKEN }}
          YEAR: ${{ steps.current_year.outputs.year }}
          MONTH: ${{ steps.current_year.outputs.month }}
          ITERATION: ${{ steps.iteration_number.outputs.ITERATION }}
          TICKET_NAME: ${{ steps.ticket_name.outputs.TICKET_NAME }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: Pre-release ${{ env.YEAR }}.${{ env.MONTH }}.${{ env.ITERATION }} (${{ env.TICKET_NAME }})
          body: |
            Updates from ${{ env.TICKET_NAME }}

            ${{ steps.changelog.outputs.changes }}
          prerelease: true
          draft: false
